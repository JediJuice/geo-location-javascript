#summary Description of the javascript usage
#labels Featured

=Simple Usage in 3 Steps=

1.) Include libraries:
{{{
<script src="http://code.google.com/apis/gears/gears_init.js" type="text/javascript"></script>
<script src="geo.js" type="text/javascript" ></script>
}}}
2.) See if the phone is supported

{{{
var supported = geo_position_js.init(); //true / false
}}}
3.) If supported call getCurrentPosition to get the users location
{{{
geo_position_js.getCurrentPosition(success_callback,error_callback);
}}}
The callback parameters are aligned to the [http://dev.w3.org/geo/api/spec-source.html W3 Geolocation API Specification]. The success_call callback parameter provides at least:  
{{{
{coords:{latitude:theLatitude,longitude}}
}}}
The error_call callback parameter provides at least:
{{{
{message:AMessageDescribingTheError}
}}}

Both callback parameters can contain more information if the underlying implementation provides more. Have a look at the sample usage in the URLs below.

= Sample URLs ==

 * [http://www.merkwelt.com/people/stan/geo_js/sample.html Very simple page that provides a status alert box ]
 * [http://www.merkwelt.com/people/stan/geo_js/sample_with_map.html Show the users location in an embedded google map(v3), requires advanced browsers ]
 * [http://www.merkwelt.com/people/stan/geo_js/sample_with_map_and_simulated_user.html Simulates a moving user in an embedded google map(v3), requires advanced browsers ]